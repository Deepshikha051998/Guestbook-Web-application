apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
<<<<<<< HEAD
    app.kubernetes.io/name: mongobackend
=======
    app.kubernetes.io/name: mongo
>>>>>>> staging
    app.kubernetes.io/component: backend
spec:
  selector:
    matchLabels:
<<<<<<< HEAD
      app.kubernetes.io/name: mongobackend
=======
      app.kubernetes.io/name: mongo
>>>>>>> staging
      app.kubernetes.io/component: backend
  replicas: 1
  template:
    metadata:
      labels:
<<<<<<< HEAD
        app.kubernetes.io/name: mongobackend
        app.kubernetes.io/component: backend
    spec:
      volumes:
      - name: mongo-pvc-hostpath
        persistentVolumeClaim:
          claimName: mongo-pvc-hostpath
      containers:
      - name: mongo
        image: mongo:4.2
        args:
          - --bind_ip
          - 0.0.0.0
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-pvc-hostpath
          mountPath: /data/db
        ports:
        - containerPort: 27017
=======
        app.kubernetes.io/name: mongo
        app.kubernetes.io/component: backend
    spec:
      containers:
      - name: mongo
        image: mongo:4.2
        volumeMounts:
        - mountPath: /backend
          name: mongo-pvc
        args:
          - --bind_ip
          - 0.0.0.0
        ports:
        - containerPort: 27017
      volumes:
        - name: mongo-pvc
          persistentVolumeClaim:
            claimName: mongo-pvc-hostpath
>>>>>>> staging
